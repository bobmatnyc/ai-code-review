#!/bin/bash
# This script tests the formatting of reviews generated by different AI models

# Set up environment
echo "Setting up environment..."
source .env.local

# Test file path
TEST_FILE="src/clients/utils/apiKeyValidator.ts"

# Output directory
OUTPUT_DIR="ai-code-review-docs"

# Clean up any existing test files
echo "Cleaning up existing test files..."
mkdir -p "$OUTPUT_DIR"
find "$OUTPUT_DIR" -name "*apiKeyValidator*" -delete

# Test with Gemini model
echo "Testing with Gemini model..."
export AI_CODE_REVIEW_MODEL="gemini:gemini-1.5-pro"
pnpm run dev "$TEST_FILE"

# Check if the review file was generated
GEMINI_FILE=$(find "$OUTPUT_DIR" -name "*apiKeyValidator*gemini*" | head -n 1)
if [ -z "$GEMINI_FILE" ]; then
  echo "ERROR: Review file not found for Gemini model"
  exit 1
fi

# Check if the review file contains the prompt instructions
if grep -q "Act as a \*\*pragmatic senior developer" "$GEMINI_FILE"; then
  echo "ERROR: Gemini review contains prompt instructions"
  exit 1
fi

if grep -q "ðŸ§  \*\*Quick Fixes Code Review Prompt\*\*" "$GEMINI_FILE"; then
  echo "ERROR: Gemini review contains prompt header"
  exit 1
fi

# Check if the review file has the expected sections
if ! grep -q "# Code Review: quick-fixes" "$GEMINI_FILE"; then
  echo "ERROR: Gemini review does not have the expected title"
  exit 1
fi

# Check if the review has priority sections (more lenient check)
if ! grep -q -E "(High|Medium|Low) Priority" "$GEMINI_FILE"; then
  echo "ERROR: Gemini review does not have priority sections"
  exit 1
fi

echo "Gemini review formatting test PASSED"

# Test with Anthropic model
echo "Testing with Anthropic model..."
export AI_CODE_REVIEW_MODEL="anthropic:claude-3-opus"
pnpm run dev "$TEST_FILE"

# Check if the review file was generated
ANTHROPIC_FILE=$(find "$OUTPUT_DIR" -name "*apiKeyValidator*claude*" | head -n 1)
if [ -z "$ANTHROPIC_FILE" ]; then
  echo "ERROR: Review file not found for Anthropic model"
  exit 1
fi

# Check if the review file contains the prompt instructions
if grep -q "Act as a \*\*pragmatic senior developer" "$ANTHROPIC_FILE"; then
  echo "ERROR: Anthropic review contains prompt instructions"
  exit 1
fi

if grep -q "ðŸ§  \*\*Quick Fixes Code Review Prompt\*\*" "$ANTHROPIC_FILE"; then
  echo "ERROR: Anthropic review contains prompt header"
  exit 1
fi

# Check if the review file has the expected sections
if ! grep -q "# Code Review: quick-fixes" "$ANTHROPIC_FILE"; then
  echo "ERROR: Anthropic review does not have the expected title"
  exit 1
fi

# Check if the review has priority sections (more lenient check)
if ! grep -q -E "(High|Medium|Low) Priority" "$ANTHROPIC_FILE"; then
  echo "ERROR: Anthropic review does not have priority sections"
  exit 1
fi

echo "Anthropic review formatting test PASSED"

# Add more tests for other models as needed

echo "All tests PASSED"
