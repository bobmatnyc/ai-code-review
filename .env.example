# Google Generative AI Key for Gemini models
# Get your key from https://ai.google.dev/
# Use the CODE_REVIEW prefix for all environment variables (recommended)
CODE_REVIEW_GOOGLE_API_KEY=your_google_api_key_here

# Legacy environment variables (still supported for backward compatibility)
# GOOGLE_GENERATIVE_AI_KEY=your_google_api_key_here

# OpenRouter API Key for Claude, GPT-4, and other models
# Get your key from https://openrouter.ai/
CODE_REVIEW_OPENROUTER_API_KEY=your_openrouter_api_key_here

# Model configuration
# Specify which model to use for code reviews using the format adapter:model

# Default model
CODE_REVIEW_MODEL=gemini:gemini-1.5-pro

# Supported Gemini models:
# gemini:gemini-1.5-pro         - Recommended for most code reviews
# gemini:gemini-1.5-flash       - Faster but less detailed reviews
# gemini:gemini-2.5-pro         - Latest model with improved capabilities
# gemini:gemini-2.0-flash       - Balanced performance and quality
# gemini:gemini-pro             - Legacy model
# gemini:gemini-pro-latest      - Latest version of legacy model

# Supported OpenRouter models:
# openrouter:anthropic/claude-3-opus     - Highest quality, most detailed reviews
# openrouter:anthropic/claude-3-sonnet   - Good balance of quality and speed
# openrouter:openai/gpt-4-turbo          - Strong performance on complex code
# openrouter:openai/gpt-4o               - Latest OpenAI model
# openrouter:deepseek/deepseek-v3        - Excellent for code analysis and refactoring
# openrouter:anthropic/claude-2.1        - Reliable performance
# openrouter:google/gemini-pro           - Google's model via OpenRouter
